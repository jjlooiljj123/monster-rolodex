{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAGaA,G,kBAAO,SAACC,GAEnB,OACA,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BACR,6BAAKJ,EAAMG,QAAQE,OACnB,6BAAKL,EAAMG,QAAQG,aCJVC,EAAW,SAACP,GAEvB,OACA,sBAAKC,UAAU,YAAf,eACED,EAAMQ,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJxCM,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAEtC,OACE,uBACAX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCCG,E,kDAtCb,aAAc,IAAD,8BACX,gBAgBFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfrC,EAAKC,MAAQ,CACXb,SAAS,GACTU,YAAY,IALH,E,gEAWO,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAASkB,S,+BAO/B,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACXU,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC9CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYc,wBAGlD,OACE,sBAAK/B,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CAAWU,YAAY,qBACvBC,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUP,KAAK,MAAMG,SAAUoB,W,GAjCnBK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c28f6040.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './card.style.css'\r\n\r\nexport const Card = (props)=>{\r\n  // console.log(props)\r\n  return (\r\n  <div className=\"card-container\">\r\n    <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n    <h1>{props.monster.name}</h1>\r\n    <h2>{props.monster.email}</h2>\r\n  </div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport './card-list.style.css'\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const CardList = (props)=>{\r\n  // console.log(props)\r\n  return (\r\n  <div className=\"card-list\">  {\r\n    props.monsters.map(monster => <Card key={monster.id} monster={monster}/>)\r\n  }</div>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport './search-box.style.css'\r\n\r\nimport {Card} from '../card/card.component'\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>{\r\n  // console.log(props)\r\n  return (\r\n    <input\r\n    className=\"search\"\r\n    type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange} />\r\n  )\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\n\nclass App extends Component{\n  constructor(){\n    super();\n \n    this.state = {\n      monsters:[],\n      searchField:''\n    }\n\n  \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users=> this.setState({monsters:users}))\n  }\n  \n  handleChange=(e)=>{\n    this.setState({searchField: e.target.value})\n  }\n\n  render(){\n    const {monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster=>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n      )\n\n    return(\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox placeholder=\"Search monster ...\" \n      handleChange={this.handleChange}/>\n      <CardList name=\"SSS\" monsters={filteredMonsters}/>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}